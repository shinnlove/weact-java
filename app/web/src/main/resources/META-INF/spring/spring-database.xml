<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"
       default-autowire="byName">

    <!-- 配置数据源和hibernate ORM框架 -->

    <!-- 加载jdbc配置文件 -->
    <!--<context:property-placeholder location="classpath:META-INF/database/jdbc.properties" file-encoding="utf-8"-->
                                  <!--ignore-unresolvable="true"/>-->
    <!--&lt;!&ndash; 配置数据源 &ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"-->
          <!--p:driverClass="${jdbc.driverClassName}"-->
          <!--p:jdbcUrl="${jdbc.url}"-->
          <!--p:user="${jdbc.username}"-->
          <!--p:password="${jdbc.password}"-->
          <!--p:testConnectionOnCheckout="${jdbc.c3p0.testConnectionOnCheckout}"-->
          <!--p:testConnectionOnCheckin="${jdbc.c3p0.testConnectionOnCheckin}"-->
          <!--p:idleConnectionTestPeriod="${jdbc.c3p0.idleConnectionTestPeriod}"-->
          <!--p:initialPoolSize="${jdbc.c3p0.initialPoolSize}"-->
          <!--p:minPoolSize="${jdbc.c3p0.minPoolSize}"-->
          <!--p:maxPoolSize="${jdbc.c3p0.maxPoolSize}"-->
          <!--p:maxIdleTime="${jdbc.c3p0.maxIdleTime}"/>-->

    <!--&lt;!&ndash; 以下为接入hibernate &ndash;&gt;-->

    <!--&lt;!&ndash; 配置sessionFactory &ndash;&gt;-->
    <!--<bean id="sessionFactory"-->
          <!--class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--&lt;!&ndash; hibernate基础属性（今后属性多了把下面的基础属性放进cfg中简化spring上下文） &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="configLocation" value="/WEB-INF/classes/hibernate/hibernate.cfg.xml"></property>&ndash;&gt;-->
        <!--&lt;!&ndash; hibernate基础属性 &ndash;&gt;-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <!--<prop key="hibernate.dialect">${hibernate.dialect}</prop>-->
                <!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
                <!--<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>-->
                <!--<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>-->
                <!--&lt;!&ndash; 本地启动hibernate如果不openSession就要从thread取 &ndash;&gt;-->
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--&lt;!&ndash; 扫描注解配置的entity（xxx实体.hbm.xml文件，实体类映射数据库字段的）&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="packagesToScan" value="com.shinnlove.common.dao"/>&ndash;&gt;-->
        <!--&lt;!&ndash; 加载实体类的hbm.xml映射文件位置及名称 &ndash;&gt;-->
        <!--<property name="mappingLocations">-->
            <!--<list>-->
                <!--<value>classpath:META-INF/hibernate/entity/*.hbm.xml</value>-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TCustomerguide.hbm.xml</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TCustomerinfo.hbm.xml</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TEnterprise.hbm.xml</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TEnterpriseinfo.hbm.xml</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TShopguide.hbm.xml</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:com/shinnlove/common/model/TSubbranch.hbm.xml</value>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="annotatedClasses">-->
            <!--<list>-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TCustomerguide</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TCustomerinfo</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TEnterprise</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TEnterpriseinfo</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TShopguide</value>&ndash;&gt;-->
                <!--&lt;!&ndash;<value>com.shinnlove.common.model.TSubbranch</value>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 使用Spring接入Hibernate事务管理器 &ndash;&gt;-->
    <!--<bean id="txManager"-->
          <!--class="org.springframework.orm.hibernate5.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置事务增强处理Bean，指定事务管理器 &ndash;&gt;-->
    <!--<tx:advice id="transactionAdvice" transaction-manager="txManager">-->
        <!--&lt;!&ndash; 配置详细事务处理语义 &ndash;&gt;-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 增删改事务传播级别Required，这也是默认级别 &ndash;&gt;-->
            <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
            <!--<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>-->
            <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>-->
            <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>-->
            <!--<tx:method name="load*" propagation="SUPPORTS" read-only="true"/>-->
            <!--&lt;!&ndash; 其他采用默认事务方式 &ndash;&gt;-->
            <!--<tx:method name="*"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; Spring aop事务管理 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--&lt;!&ndash; 配置切入点 &ndash;&gt;-->
        <!--<aop:pointcut id="transactionPointcut"-->
                      <!--expression="execution(* com.shinnlove.web.*.*(..))"/>-->
        <!--&lt;!&ndash; 指定在txAdvice切入点应用txAdvice事务增强处理 &ndash;&gt;-->
        <!--<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>-->
    <!--</aop:config>-->

</beans>